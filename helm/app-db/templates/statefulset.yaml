apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "app-db.fullname" . }}
  labels:
    {{- include "app-db.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "app-db.selectorLabels" . | nindent 6 }}
  minReadySeconds: 10
  template:
    metadata:
      labels:
        {{- include "app-db.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{.Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: POSTGRES_DB
              value: {{.Values.POSTGRES_DB }}
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: kuber-secret
                  key: db-user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: kuber-secret
                  key: db-password
          ports:
            - containerPort: {{.Values.service.port }}
              name: postgresql
          volumeMounts:
            - name: app-postgresql-pv
              mountPath: /var/lib/postgresql/data
            - mountPath: /docker-entrypoint-initdb.d
              name: postgresql-initdb
      volumes:
        - name: app-postgresql-pv
          persistentVolumeClaim:
            claimName: app-postgresql-pvc
        - name: postgresql-initdb
          configMap:
            name: postgresql-initdb-config