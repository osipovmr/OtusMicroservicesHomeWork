{
	"info": {
		"_postman_id": "29a170df-dce8-489a-99ef-7e0bc766933f",
		"name": "PROJECT",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21930946"
	},
	"item": [
		{
			"name": "Регистрация",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"password\", pm.variables.replaceIn('{{$randomPassword}}'))",
							"pm.collectionVariables.set(\"email\", pm.variables.replaceIn('{{$randomEmail}}'))",
							"pm.collectionVariables.set(\"login\", pm.variables.replaceIn('{{$randomUserName}}'))",
							"pm.collectionVariables.set(\"firstName\", pm.variables.replaceIn('{{$randomFirstName}}'))",
							"pm.collectionVariables.set(\"lastName\", pm.variables.replaceIn('{{$randomLastName}}'))",
							"pm.collectionVariables.set(\"avatarUri\", pm.variables.replaceIn('{{$randomAvatarImage}}'))",
							"pm.collectionVariables.set(\"age\", pm.variables.replaceIn('{{$randomInt}}'))"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"login\": \"{{login}}\", \n\t\"password\": \"{{password}}\",\n\t\"email\": \"{{email}}\",\n\t\"first_name\": \"{{firstName}}\",\n\t\"last_name\": \"{{lastName}}\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/register",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Логин",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"login\": \"{{login}}\", \"password\": \"{{password}}\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавить возраст и аватар",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"avatarUri\": \"{{avatarUri}}\",\n    \"age\": {{age}}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/me",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "Проверка данных",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"test token data\", function () {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.email).to.eql(pm.collectionVariables.get(\"email\"))",
							"    pm.expect(jsonData.lastName).to.eql(pm.collectionVariables.get(\"lastName\"))",
							"    pm.expect(jsonData.firstName).to.eql(pm.collectionVariables.get(\"firstName\"))",
							"    pm.expect(jsonData.age).to.eql(parseInt(pm.collectionVariables.get(\"age\")))",
							"     pm.expect(jsonData.avatarUri).to.eql(pm.collectionVariables.get(\"avatarUri\"))",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/users/me",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "Проверка созданного счета",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"test token data\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/payment/checkAccount",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"payment",
						"checkAccount"
					]
				}
			},
			"response": []
		},
		{
			"name": "Положить деньги на счет 1100 рублей",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"test token data\", function () {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.availableMoney).to.eql(1100)",
							"    pm.expect(jsonData.reservedMoney).to.eql(0)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/payment/deposit?deposit=1100",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"payment",
						"deposit"
					],
					"query": [
						{
							"key": "deposit",
							"value": "1100"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Количество доступных курьеров = 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"test token data\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.expect(parseInt(pm.response.text())).to.eql(2)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/delivery/available",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"delivery",
						"available"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавить заказ на 1000 рублей",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"x-orderid\", pm.variables.replaceIn('{{$guid}}'))",
							"pm.collectionVariables.set(\"productUUID\", \"22a214f1-8d88-4997-821e-a0781d003e16\")"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"test response\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-orderid",
						"value": "{{x-orderid}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"productUUID\": \"{{productUUID}}\",\n    \"quantity\": 10,\n    \"price\": 100,\n    \"deliveryDate\": \"2024-10-10\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/order/add",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"order",
						"add"
					]
				}
			},
			"response": []
		},
		{
			"name": "Проверка идемпотентности",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"test response\", function () {",
							"    pm.response.to.have.status(409);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-orderid",
						"value": "{{x-orderid}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"productUUID\": \"{{productUUID}}\",\n    \"quantity\": 10,\n    \"price\": 100,\n    \"deliveryDate\": \"2024-10-10\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/order/add",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"order",
						"add"
					]
				}
			},
			"response": []
		},
		{
			"name": "Статус заказа \"Заказ одобрен\"",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"test token data\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.expect(pm.response.text()).to.eql(\"Заказ одобрен.\")",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"setTimeout(() => {}, 200);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/order/status?orderUUID={{x-orderid}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"order",
						"status"
					],
					"query": [
						{
							"key": "orderUUID",
							"value": "{{x-orderid}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Проверка счета (списано за заказ 1000, доступно 100)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"test token data\", function () {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.availableMoney).to.eql(100)",
							"    pm.expect(jsonData.reservedMoney).to.eql(0)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/payment/checkAccount",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"payment",
						"checkAccount"
					]
				}
			},
			"response": []
		},
		{
			"name": "Количество доступных курьеров = 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"test token data\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.expect(parseInt(pm.response.text())).to.eql(1)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/delivery/available",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"delivery",
						"available"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавить второй заказ на 1000 рублей",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"x-orderid\", pm.variables.replaceIn('{{$guid}}'))",
							"pm.collectionVariables.set(\"productUUID\", \"22a214f1-8d88-4997-821e-a0781d003e16\")"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"test response\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-orderid",
						"value": "{{x-orderid}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"productUUID\": \"{{productUUID}}\",\n    \"quantity\": 10,\n    \"price\": 100,\n    \"deliveryDate\": \"2024-10-10\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/order/add",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"order",
						"add"
					]
				}
			},
			"response": []
		},
		{
			"name": "Статус заказа \"Невозможно выполнить заказ\"",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"test token data\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.expect(pm.response.text()).to.eql(\"Невозможно выполнить заказ, так как недостаточно средств для оплаты.\")",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"setTimeout(() => {}, 200);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/order/status?orderUUID={{x-orderid}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"order",
						"status"
					],
					"query": [
						{
							"key": "orderUUID",
							"value": "{{x-orderid}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Проверка счета (доступно 100)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"test token data\", function () {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.availableMoney).to.eql(100)",
							"    pm.expect(jsonData.reservedMoney).to.eql(0)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/payment/checkAccount",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"payment",
						"checkAccount"
					]
				}
			},
			"response": []
		},
		{
			"name": "Количество доступных курьеров = 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"test token data\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.expect(parseInt(pm.response.text())).to.eql(1)",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"setTimeout(() => {}, 200);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/delivery/available",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"delivery",
						"available"
					]
				}
			},
			"response": []
		},
		{
			"name": "Уведомления",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"test token data\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/notification/notificationList",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"notification",
						"notificationList"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
					"tests[\"[INFO] Response: \" + responseBody] = true;"
				]
			}
		}
	],
	"variable": [
		{
			"key": "IDtoken",
			"value": "",
			"type": "string"
		},
		{
			"key": "password",
			"value": "",
			"type": "string"
		},
		{
			"key": "email",
			"value": "",
			"type": "string"
		},
		{
			"key": "login",
			"value": "",
			"type": "string"
		},
		{
			"key": "firstName",
			"value": "",
			"type": "string"
		},
		{
			"key": "lastName",
			"value": "",
			"type": "string"
		},
		{
			"key": "avatarUri",
			"value": "",
			"type": "string"
		},
		{
			"key": "age",
			"value": "",
			"type": "number"
		},
		{
			"key": "baseUrl",
			"value": "http://arch.homework",
			"type": "string"
		},
		{
			"key": "x-orderid",
			"value": ""
		},
		{
			"key": "randomNum",
			"value": ""
		},
		{
			"key": "productUUID",
			"value": ""
		}
	]
}